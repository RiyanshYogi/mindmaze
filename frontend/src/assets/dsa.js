export const dsa = [
    {
      question: "Which data structure uses LIFO (Last In, First Out) principle?",
      option1: "Queue",
      option2: "Stack",
      option3: "Array",
      option4: "Linked List",
      ans: 2,
    },
    {
      question: "What is the time complexity of accessing an element in an array?",
      option1: "O(1)",
      option2: "O(n)",
      option3: "O(log n)",
      option4: "O(n^2)",
      ans: 1,
    },
    {
      question: "Which of the following is a linear data structure?",
      option1: "Tree",
      option2: "Graph",
      option3: "Stack",
      option4: "Heap",
      ans: 3,
    },
    {
      question: "What is the primary advantage of using a linked list over an array?",
      option1: "Faster access to elements",
      option2: "Dynamic memory allocation",
      option3: "Less memory usage",
      option4: "Faster sorting",
      ans: 2,
    },
    {
      question: "Which of the following is NOT a type of linked list?",
      option1: "Singly Linked List",
      option2: "Doubly Linked List",
      option3: "Circular Linked List",
      option4: "Hash Linked List",
      ans: 4,
    },
    {
      question: "Which C++ STL container is implemented as a dynamic array?",
      option1: "vector",
      option2: "list",
      option3: "map",
      option4: "deque",
      ans: 1,
    },
    {
      question: "Which data structure is used in Breadth-First Search (BFS) algorithm?",
      option1: "Stack",
      option2: "Queue",
      option3: "Priority Queue",
      option4: "Set",
      ans: 2,
    },
    {
      question: "What is a self-balancing binary search tree called?",
      option1: "Heap",
      option2: "AVL Tree",
      option3: "B-Tree",
      option4: "Trie",
      ans: 2,
    },
    {
      question: "Which sorting algorithm has the best average-case time complexity?",
      option1: "Bubble Sort",
      option2: "Merge Sort",
      option3: "Selection Sort",
      option4: "Insertion Sort",
      ans: 2,
    },
    {
      question: "What is the primary purpose of a hash table?",
      option1: "To sort data",
      option2: "To search data in O(1) time on average",
      option3: "To store data sequentially",
      option4: "To implement trees",
      ans: 2,
    },
  ];
  